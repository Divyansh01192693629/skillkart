{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PCC\\\\Desktop\\\\skillkart\\\\client\\\\src\\\\components\\\\Roadmap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Roadmap = () => {\n  _s();\n  const {\n    skill\n  } = useParams();\n  const [roadmap, setRoadmap] = useState(null);\n  const [resources, setResources] = useState({});\n  const [userEmail, setUserEmail] = useState('testuser@skillkart.com'); // Replace with logged-in user\n  const [xp, setXp] = useState(0);\n  const [badges, setBadges] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchRoadmap = async () => {\n      try {\n        const response = await fetch(`http://localhost:5001/api/roadmaps/${skill}`);\n        const data = await response.json();\n        setRoadmap(data);\n        // Fetch resources for each topic\n        for (const week of data.weeks) {\n          for (const topic of week.topics) {\n            const res = await fetch(`http://localhost:5001/api/resources/${topic.id}`);\n            const resData = await res.json();\n            setResources(prev => ({\n              ...prev,\n              [topic.id]: resData\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('Failed to fetch roadmap:', error);\n      }\n    };\n    // Fetch user data (XP, badges)\n    const fetchUser = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/api/auth/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: userEmail,\n            password: 'Test1234'\n          })\n        });\n        const data = await response.json();\n        if (data.user) {\n          setXp(data.user.xp);\n          setBadges(data.user.badges);\n        }\n      } catch (error) {\n        console.error('Failed to fetch user:', error);\n      }\n    };\n    fetchRoadmap();\n    fetchUser();\n  }, [skill, userEmail]);\n  const markProgress = async (topicId, status) => {\n    try {\n      const response = await fetch('http://localhost:5001/api/gamification', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: userEmail,\n          topicId,\n          status\n        })\n      });\n      const data = await response.json();\n      setXp(data.xp);\n      setBadges(data.badges);\n      // Update local roadmap state\n      const updatedRoadmap = {\n        ...roadmap\n      };\n      updatedRoadmap.weeks = updatedRoadmap.weeks.map(week => ({\n        ...week,\n        topics: week.topics.map(topic => topic.id === topicId ? {\n          ...topic,\n          status\n        } : topic)\n      }));\n      setRoadmap(updatedRoadmap);\n    } catch (error) {\n      console.error('Failed to update progress:', error);\n    }\n  };\n  if (!roadmap) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [roadmap.skill, \" Roadmap\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"XP: \", xp, \" | Badges: \", badges.join(', ') || 'None']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link mb-3\",\n      onClick: () => navigate(`/discussion/${skill}`),\n      children: \"Go to Discussion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this), roadmap.weeks.map(week => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Week \", week.weekNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: week.topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [topic.name, \" (\", topic.status, \")\", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control d-inline w-auto ml-2\",\n            value: topic.status,\n            onChange: e => markProgress(topic.id, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Not Started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (resources[topic.id] || []).map((res, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: res.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: [res.title, \" (\", res.type, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 28\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 26\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 22\n          }, this)]\n        }, topic.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 16\n      }, this)]\n    }, week.weekNum, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 14\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n};\n_s(Roadmap, \"/gqMz30ML8h9hnkfhkRidhQ8YiQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Roadmap;\nexport default Roadmap;\nvar _c;\n$RefreshReg$(_c, \"Roadmap\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Roadmap","_s","skill","roadmap","setRoadmap","resources","setResources","userEmail","setUserEmail","xp","setXp","badges","setBadges","navigate","fetchRoadmap","response","fetch","data","json","week","weeks","topic","topics","res","id","resData","prev","error","console","fetchUser","method","headers","body","JSON","stringify","email","password","user","markProgress","topicId","status","updatedRoadmap","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","join","onClick","weekNum","name","value","onChange","e","target","index","href","url","rel","title","type","_c","$RefreshReg$"],"sources":["C:/Users/PCC/Desktop/skillkart/client/src/components/Roadmap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n     import { useParams, useNavigate } from 'react-router-dom';\r\n\r\n     const Roadmap = () => {\r\n       const { skill } = useParams();\r\n       const [roadmap, setRoadmap] = useState(null);\r\n       const [resources, setResources] = useState({});\r\n       const [userEmail, setUserEmail] = useState('testuser@skillkart.com'); // Replace with logged-in user\r\n       const [xp, setXp] = useState(0);\r\n       const [badges, setBadges] = useState([]);\r\n       const navigate = useNavigate();\r\n\r\n       useEffect(() => {\r\n         const fetchRoadmap = async () => {\r\n           try {\r\n             const response = await fetch(`http://localhost:5001/api/roadmaps/${skill}`);\r\n             const data = await response.json();\r\n             setRoadmap(data);\r\n             // Fetch resources for each topic\r\n             for (const week of data.weeks) {\r\n               for (const topic of week.topics) {\r\n                 const res = await fetch(`http://localhost:5001/api/resources/${topic.id}`);\r\n                 const resData = await res.json();\r\n                 setResources((prev) => ({ ...prev, [topic.id]: resData }));\r\n               }\r\n             }\r\n           } catch (error) {\r\n             console.error('Failed to fetch roadmap:', error);\r\n           }\r\n         };\r\n         // Fetch user data (XP, badges)\r\n         const fetchUser = async () => {\r\n           try {\r\n             const response = await fetch('http://localhost:5001/api/auth/login', {\r\n               method: 'POST',\r\n               headers: { 'Content-Type': 'application/json' },\r\n               body: JSON.stringify({ email: userEmail, password: 'Test1234' })\r\n             });\r\n             const data = await response.json();\r\n             if (data.user) {\r\n               setXp(data.user.xp);\r\n               setBadges(data.user.badges);\r\n             }\r\n           } catch (error) {\r\n             console.error('Failed to fetch user:', error);\r\n           }\r\n         };\r\n         fetchRoadmap();\r\n         fetchUser();\r\n       }, [skill, userEmail]);\r\n\r\n       const markProgress = async (topicId, status) => {\r\n         try {\r\n           const response = await fetch('http://localhost:5001/api/gamification', {\r\n             method: 'POST',\r\n             headers: { 'Content-Type': 'application/json' },\r\n             body: JSON.stringify({ email: userEmail, topicId, status })\r\n           });\r\n           const data = await response.json();\r\n           setXp(data.xp);\r\n           setBadges(data.badges);\r\n           // Update local roadmap state\r\n           const updatedRoadmap = { ...roadmap };\r\n           updatedRoadmap.weeks = updatedRoadmap.weeks.map((week) => ({\r\n             ...week,\r\n             topics: week.topics.map((topic) =>\r\n               topic.id === topicId ? { ...topic, status } : topic\r\n             )\r\n           }));\r\n           setRoadmap(updatedRoadmap);\r\n         } catch (error) {\r\n           console.error('Failed to update progress:', error);\r\n         }\r\n       };\r\n\r\n       if (!roadmap) return <div>Loading...</div>;\r\n\r\n       return (\r\n         <div className=\"container mt-5\">\r\n           <h1>{roadmap.skill} Roadmap</h1>\r\n           <p>XP: {xp} | Badges: {badges.join(', ') || 'None'}</p>\r\n           <button\r\n             className=\"btn btn-link mb-3\"\r\n             onClick={() => navigate(`/discussion/${skill}`)}\r\n           >\r\n             Go to Discussion\r\n           </button>\r\n           {roadmap.weeks.map((week) => (\r\n             <div key={week.weekNum} className=\"card p-3 mb-3\">\r\n               <h3>Week {week.weekNum}</h3>\r\n               <ul>\r\n                 {week.topics.map((topic) => (\r\n                   <li key={topic.id}>\r\n                     {topic.name} ({topic.status})\r\n                     <select\r\n                       className=\"form-control d-inline w-auto ml-2\"\r\n                       value={topic.status}\r\n                       onChange={(e) => markProgress(topic.id, e.target.value)}\r\n                     >\r\n                       <option>Not Started</option>\r\n                       <option>In Progress</option>\r\n                       <option>Completed</option>\r\n                     </select>\r\n                     <ul>\r\n                       {(resources[topic.id] || []).map((res, index) => (\r\n                         <li key={index}>\r\n                           <a href={res.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                             {res.title} ({res.type})\r\n                           </a>\r\n                         </li>\r\n                       ))}\r\n                     </ul>\r\n                   </li>\r\n                 ))}\r\n               </ul>\r\n             </div>\r\n           ))}\r\n         </div>\r\n       );\r\n     };\r\n\r\n     export default Roadmap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}